/**
 * @param {character[][]} board
 * @param {string[]} words
 * @return {string[]}
 */
var findWords = function(board, words) {
    var rst = [];
    words.sort();
    if(words.length > 1) {
        var i = 1;
        while(i < words.length) {
            if(words[i] === words[i - 1]) {
                words.splice(i, 1);
            } else {
                i ++;
            }
        }
    }
    words.forEach(function(word) {
        if(findWord(board, word)) {
            rst.push(word);
        }
    });
    return rst
};

var findWord = function(board, word) {
    for(var i = 0; i < board.length; i ++) {
        for(var j = 0; j < board[i].length; j ++) {
            if(isMatch(i, j, 0, board, word)){
                return true;
            }
        }
    }
    return false;
}

var isMatch = function(i, j, idx, board, word) {
    if(board[i][j] !== word.charAt(idx)) {
        return false;
    }
    idx ++;
    if(idx === word.length) {
        return true;
    }
    var tmp = board[i][j];
    board[i][j] = '\0';
    if(i > 0 && isMatch(i - 1, j, idx, board, word)) {
        board[i][j] = tmp;
        return true;
    }
    if(i < board.length - 1 && isMatch(i + 1, j, idx, board, word)) {
        board[i][j] = tmp;
        return true;
    }
    if(j > 0 && isMatch(i, j - 1, idx, board, word)) {
        board[i][j] = tmp;
        return true;
    }
    if(j < board[i].length - 1 && isMatch(i, j + 1, idx, board, word)) {
        board[i][j] = tmp;
        return true;
    }
    board[i][j] = tmp;
    return false;
}