/**

 * Definition for a binary tree node.

 * function TreeNode(val) {

 *     this.val = val;

 *     this.left = this.right = null;

 * }

 */

/**

 * @param {TreeNode} root

 * @param {TreeNode} p

 * @param {TreeNode} q

 * @return {TreeNode}

 */

var lowestCommonAncestor = function(root, p, q) {

    if(root === null) {

        return null;

    }

    while(root.val > p && root.val > q) {

        root = root.left;

    }

    while(root.val < p && root.val < q) {

        root = root.right;

    }

    if(root === p || root === q) {

        return root;

    }

    var left = lowestCommonAncestor(root.left, p, q);

    var right = lowestCommonAncestor(root.right, p, q);

    if(left !== null && right !== null) {

        return root;

    }

    return (left === null) ? right : left;

};
