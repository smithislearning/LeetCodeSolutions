/**

 * Definition for singly-linked list.

 * function ListNode(val) {

 *     this.val = val;

 *     this.next = null;

 * }

 */

/**

 * @param {ListNode[]} lists

 * @return {ListNode}

 */

var mergeKLists = function(lists) {

    if(lists.length === 0) {

        return null;

    }

    if(lists.length === 1) {

        return lists[0];

    }

    var rst = null;

    for(let i = 0; i < lists.length; i ++) {

        rst = mergeTwoLists(rst, lists[i]);

    }

    return rst;

};

var mergeTwoLists = function(l1, l2) {

    var dummy = new ListNode(0);

    var wrk = dummy;

    while(l1 !== null && l2 !== null) {

        if(l1.val <= l2.val) {

            wrk.next = l1;

            l1 = l1.next;

        } else {

            wrk.next = l2;

            l2 = l2.next;

        }

        wrk = wrk.next;

    }

    if(l1 !== null) {

        wrk.next = l1;

    }

    if(l2 !== null) {

        wrk.next = l2;

    }

    return dummy.next;

};
