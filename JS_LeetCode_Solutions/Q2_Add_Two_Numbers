/**

 * Definition for singly-linked list.

 * function ListNode(val) {

 *     this.val = val;

 *     this.next = null;

 * }

 */

/**

 * @param {ListNode} l1

 * @param {ListNode} l2

 * @return {ListNode}

 */

var addTwoNumbers = function(l1, l2) {

    if(l1 === null && l2 === null) {

        return null;

    }

    if(l1 === null || l2 === null) {

        return (l1 === null) ? l2 : l1;

    }

    var node = l1;

    var rem = 0;

    while(node !== null) {

        let val = node.val + rem;

        if(l2 !== null) {

            val += l2.val;

            l2 = l2.next;

        }

        node.val = val % 10;

        rem = Math.floor(val / 10);

        if(node.next === null) {

            if(l2 !== null) {

                node.next = l2;

                l2 = null;

            } else if(rem > 0) {

                node.next = new ListNode(0);

            }

        }

        node = node.next;

    }

    return l1;

};
