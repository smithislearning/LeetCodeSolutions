/**
 * Definition for singly-linked list.
 * function ListNode(val) {
 *     this.val = val;
 *     this.next = null;
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    if(l1 === null) {
        return l2;
    }
    if(l2 === null) {
        return l1;
    }
    var tmp = new ListNode(NaN);
    tmp.next = l1;
    while(l1 !== null && l2 !== null) {
        l1.val += l2.val;
        if(l1.next === null) {
            l1.next = l2.next;
            l2.next = null;
        }
        l1 = l1.next;
        l2 = l2.next;
    }
    l1 = tmp.next;
    while(l1 !== null) {
        if(l1.val >= 10) {
            var toPass = Math.floor(l1.val / 10);
            if(l1.next === null) {
                l1.next = new ListNode(toPass);
            } else {
                l1.next.val += toPass;
            }
            l1.val %= 10;
        }
        l1 = l1.next;
    }
    return tmp.next;
};
