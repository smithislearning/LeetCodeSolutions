/**

 * @param {number[]} nums

 * @return {number}

 */

var thirdMax = function(nums) {

    if(nums.length === 0) {

        return NaN;

    }

    var hashSet = new Set();

    nums.forEach(function(num) {

        hashSet.add(num);

    });

    var itr = hashSet.values();

    var val = itr.next().value;

    var p = [];

    while(typeof val !== 'undefined') {

        p.push(val);

        val = itr.next().value;

    }

    if(p.length === 1) {

        return p[0];

    }

    if(p.length === 2) {

        return Math.max(p[0], p[1]);

    }

    var max = [];

    for(let i = 0; i < 3; i ++) {

        max.push(Number.MIN_SAFE_INTEGER);

    }

    for(let i = 0; i < p.length; i ++) {

        if(p[i] > max[0]) {

            max.pop();

            max.unshift(p[i]);

        } else if(p[i] > max[1]) {

            max[2] = max[1];

            max[1] = p[i];

        } else if(p[i] > max[2]) {

            max[2] = p[i];

        }

    }

    return max[2];

};
