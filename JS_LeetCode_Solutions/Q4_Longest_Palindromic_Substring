/**
 * @param {string} s
 * @return {string}
 */
var longestPalindrome = function(s) {
    var ref = [];
    for(var i = 0; i < s.length; i ++) {
        ref.push("#");
        ref.push(s.charAt(i));
    }
    ref.push("#");
    var wrk = [];
    for(i = 0; i < ref.length; i ++) {
        for(var j = 0; ; j++) {
            if(i - j === 0 || i + j === ref.length - 1) {
                wrk[i] = j;
                break;
            } else if(ref[i - j] !== ref[i + j]) {
                wrk[i] = j - 1;
                break;
            }
        }
    }
    var max = -1;
    var maxIdx = -1;
    for(i = 0; i < wrk.length; i ++) {
        if(wrk[i] > max) {
            max = wrk[i];
            maxIdx = i;
        }
    }
    ref.splice(maxIdx + max, wrk.length - 1 - maxIdx - max);
    ref.splice(0, maxIdx - max);
    var rst = "";
    for(i = 0; i < ref.length; i ++) {
        if(ref[i] === "#") {
            continue;
        }
        rst += ref[i];
    }
    return rst;
};
